<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIABOGwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgEAAAA9ntg7QAAAAFv
        ck5UAc+id5oAABsISURBVHja7V0LfI7VH//uwjbDLszY3CKF5Faqf25RIoUQoutfpRsTFVEklErDpIvU
        p1JhbpVLLrkLkTAkYeS6zG2Izdj2/73Wmvlv73nOec5zfc/3fD4+27zveZ7nnN/zO7/7D1BQUFBQUFBQ
        UFBQUFBQUFBQUFBQUFBQUFBQUFBQUHA8iiMUYYhEFMojhkZFGjGoQL+Vo7+G0f8GwU8tk1vgj5K0sdeh
        GbqgN4ZhHL7Ad1iCNdiMnUimcZDGPuzB70jCWvqf7zEZCfTJOHRDc1yPaJRCgFpIZyGYNr0uOmMgPsQ8
        2tgjOInzyEIOx8hGOk7RN7fjB3yEV9AVDYgYQtTi2hlh9K53wGtIxBYcxTmuDWeN80glUpqB4cQZ6iBc
        HRN2Qiix6gcxGstwCH9L3fbCRjrxhZUYix6oSceDgqUogyYYgDk4QNuSY/LIIOlhAYagJQmUih+Yjijc
        hVFYhxN0WudYOtKwAe+hLckdCqagNG7HCKzHaYs3vuA4S2TwNnGDMLVB3pSyyMu6dyT9JIIAEvL6YBGO
        22rrrxyn8CNeQC0Eqs2+GkH0diSQ/r2Xxk+kj7ekv/CgFLH8CdiNS7bd/LyRRU/4MVoRp1L4F7EYT6f1
        lct0HGNQXuO3y+EhzKW3K8dBI40ExMc0P6HLEYPZhZpapmtYoEqII1Ev3VGbn68n/EwHwjWK+ScUaW2L
        R3Ev36yKF7HRAUzf27iE7Rjk20TQ8irmf+VIRbMiD43+2MppvrWvVLANA1HFVyX/BK+LM64QjaAsepFS
        dckVm59PBJvwrC/aCiJJ8ve2MD8hosDnQ3A/luKCqzY/b2RiBboi1NcEwL1eFyWZPpEHP9yCyQYbeLJI
        oDxLGsUx/IUjOHzZHXyYfkqh4+gkzuC8wZznLKbgNkE7iCNRkRbY24IcpE/kojxexX4DlvwcqZzJWIVp
        eB9DiQ13x31ojoaojetIOPMEhFRDddREAzRFG3TB0xhMwulXxId24ihtmHxT8yEM//epFQFcXoriaEfs
        8ZLUN20/VmISBqAzGtE1Iuhw4XnvghCGCrgR95IaOh4/YBdp9vJIIZsOxo6cpjDXEkAF+kw8sV9ZG78D
        ifQO30tvdbgkk6wfSqESaTN9iaB+IX6SJclU9AGuVQRwhCT+VRKW8yJdZz5eR1u6YrBhTxOIKNyKPvga
        f5C0oP+uf0Unr5YQHyCAS7pDODJJzJyCp+hML2micasqSQvvY7PuuKNTeA+xvkwA+k7SFMzGf1HDotPU
        n46v+4mR79CltmZjWZHmMEUARY6/sZoEvAYoYfkTBhA3eBzfkWIp/jT7STspoQhA60ihM7gjytrqOUPR
        GO/id2EB8TxxkhhFAGx2mUxn5s02VaD8SPPoh7WCB0I2FuImRQDeFmg7hqCW7a1o0SSVrBB0YP+G9m4L
        MJVFALtIxavumKcui0exXIgTpOAZdymGMghgP95ETce9GR6f5kYBmeAMhrspnEwvAaThczrzneo8qYzB
        2C1g2ZiIKEUAHuveYtxnoF3PHNTFJCJjXp/lFFTydQJIxkso44o1CEYHrOQ+DOa5w1MgRgDZWI37L2fu
        V9SRR2AnVMAw/MW5Cotwve9ygJMk+h28PMTyCOyHALQizYCPDywh4VdpAdx5BPZFDOkzfI7vpU7nAjIN
        QdNdQALF0AXbuJ57IaopAsgjgTGuMJLciBmk4Wh/7jlO1gjk+gJS0dwVekEERnIFv051rl1AtjdwnEsi
        aovjcfzJYRf40KnVSGQTwNV5BE5GS/yq+bkvYLgz9SDZBJCs22vuj2CURiTKkW4eg1gaeVUCS9H/mOtx
        qIvFHOGuzzrRU8hKDDGHAErQBtfGPXgSQzGBTtSFWIMk7KLZDmA/9mAH/fYT5mMK3ser6Ik29OmyphSF
        q0J3k6XZU9jOeQQQSQtr1RHgT5+tix4kcM3EFlq+Mxpl70z6ZAqx50SMQDcihQhD37woTNSsE2x3XsiI
        P4ltMglgrCYhMIR056505dW0kRm6i8KtIvWzG2oY5pYKR4Lm2IFFzgscayGxps9xms07glGHzsrpdPDI
        LSqRTjMmohdqGkIGpfCORkLNpkPKYfVKgxgJ4jyGoHgvkrAfKuMRTCOh07j0zoukuk2hQ0X+WxhKJKCN
        C5wjAnecIDhbyvYnIrpIIrsVo7DVpLTyDGwmueJmyVbJUnTQZGqMkGriPBJI0HkQHKe3v/DtL0ky+2Ru
        V6v+cRif4S6p2f5h+EAj91riPEkgiE7vcSTDJ//j5NU+ki+7g1sU+r6VRHt8yx1vI7Mu4EwiP3kpHWXw
        lUZuONqJXhGPWpbbooFnxNC3/AslqVaYRQqb9cUhp6IlikkznM3TeNVO8GnUxyQvxafMHqkkm9eR9GQ1
        GUV18sYvznYT60E0XqGDwW4VgHahv6QYxts1RhK/7xslJgoikBj/EptWEMvEAjoMZDSY6apJZE5DR1/b
        /vIYQezWzpXAUvC6BN99APE4LYahNb5Ta8iDpvjRAaUjL2EubpFgFfhcU5zAG75ScSwET3MEUFg99uBx
        3WratfhZU8Wx23yD9Y+X3ATK6HEGb+uuYNCaDhT2lb5xa2mJfNQhpprtqO3PPQpmooZOu8lADcbhs3jA
        3dvfjDRepxaHXa2TQUfiOw1XWeHmGsQdSL92cn3gHWij6/lv0RBRlek8/6BWFtiDhBynl4jep1Nb76PB
        x/krKrtx+3vaXOfXXhv4QR1BZRGYo0EdHOi+7X9cV+E1u5mHHtSxFs1xhHmFbW7zDDzkkrc/nwuIHwQB
        GMnUglzGAzqYcvZn4QQO0zhhin3xTx3iYBUNKSRbUdUt298ce0wI61qKONyOa2g0Rl/6LcPwa27XYSJ+
        knl/WXjBHdt/AzaYwJD7kI59Jcqgnya7m76xStg0FIEFzNl/dkOfwvKYa9F57IcuJpDADOGYgXbMfOIM
        POZ8l0+C4UbfDHr7C4cfXjQ8rvgS3hJ0E4ViOnP2BU6vMPiMCS6fpVcx/ysRhZWGX/+08Ht6N7O8TBpa
        OXn7m5jg8M0i0c8b+pqgEexGI0H++A1z7o+c27m8ApaYoIydIMnfGxpL617kvehLWUEecIox817Ucub2
        B2KkKdr4YUYf32r0CePv4iKGCMUOlsS3TA7X15kE0MYkw+9BRhSdkS1uChqH7xBap87MHkuLEea87Y8m
        0SzHpwggBz8IKYSRWM4ssem4Qlp+eMW0QG/7EEAm+gut1vPMtRrlNAKoL7mMjDMIwJNKIpJNVB07GfNu
        cFaEUBA+MdErZycC8OT28OcU+mMMMyC1tZMIoJWpOX72IoBUZsWTwnAHU1V91zn1xEIxw1S/vL0IIAdT
        BIK6w5kWk/U2a6rnBe1NTvC2GwGcEooSeJHhMTnlFE0gFLNMjsyxGwF4/IP8VUbqMc1Vg51i/knzeQI4
        ibu4160E0yL4g4mttHXI/5NNj82zHwHk4DMBBzHLaXXQCY0mGpkQgOEEAjiMm7nXrgFj7dJ1xSGbZP97
        y4LoXDsSQA5Gcq9eKWaIWLzdVcGKSFIE8M/YJFD2bSgzYzDc3gTwiEllHZ1AAOnowb1+rRkK9CF7dxwL
        xjRLEjTsSQCeLH/egk+x2O51xvPobGcCuAEHFAEUSBvhldqLM3WoN+xMAM9ZVOnLrgRwEU9xr2F/xpzT
        7VtXPFhDiLNvEUAOHYm8hejvYmQKbLGvW7iGiREATiGAZO783kr4w+uMR1HfrgTQ3YRMPKcRwHnuWj+h
        jMoB59HFriagsZaladuXAERMN6MZM9o0ZTxCciMptxDASm7TzVOMdlMf2rOM5I0W+ACcQACHUZtzJZsx
        EkXm27PfaA/LJAB7E0A6unKuZFVGMt22IpvsWIo3LVtiexNADoZzrmQk1nmd7wius9/2h2CmIgBJtoAQ
        JDKCTZrajwDKWeIFdAYB/MIdzDmaoQh2tR8B3GBBhy+nEMAR7txe7+bgbPS2HwHcY2mjJ3sTwGnczbma
        DzME6qH2I4BeljZ8sTcBZOJx7qgA7/6AsTK3zp+kzhgakbrMC0MtXGC7EwB/OHdDRkHNL2X1FwxCSyRg
        DfbS8DRybCnYscofExQBeBnjOc3BrIIW38npbRpLN1Ywg+84xghVpQuxKBLIKQTwNeeLVYFRVHOxjLph
        hTd/zsZ0ARIojYU2J4DDlt7fPM6Ejihs8jrfGi810TQz/4QilYx47hOmjKZWSNYRQJQJdUq9jdWI4HSs
        rfI632b9TexaeknfTkUzbjPQVlsTgB+JVdOQbtn9beHcsNLE5L3Nt0Nv+Vj/It//3DGOUyOoYHELmIMa
        Wi2WwjMam7fKHzs43TelMN/rfLtoxXUhktHK+CdOlhWL/bYngFz1aqolfGA354aFMtpK7RVIOblKAExm
        RLLFcBLAAUcQgOfdes4CbrWfVogHJRgFNnjn435jD6ES13xWq1mHuUIv65vOB/gJYJaxBMDSM1mVN/+f
        oKxtAHsSTTjPWHP5AC/LZh0Be/TKAOXxO8N/VcNRQqBIX436JuoFf3BK7SUZkcG6tQCW2pbC6cC0Wg3M
        wTKBCp3m6QW8aiArTTxJb3JIWUa7olTO5INIrLWYADIEyyk3RKIJfOAnTstdOFZ4nW+j3nphZRhRZ7xn
        qtWm4Fy5RSxvtjTJA0bzgQWccbxlGZ2V1+o1BYfhR68XOIN7uOYLttgZlCe5xAk6STx8wMiY5m84owKj
        6ZQ31BlUghHCyZt+ZLU7OD8EOxE3CfKBZw0UZHndwZUYavoMvRnCxfCZ1wtcxJOOCggpaHV7TvD9aGCY
        PDCE805uxFGv830qUI34KrBKEw/inI+VzmQ2H2goyAfiNHT05R0X8QTnfbRg5AbF648GeJ1x02M452tj
        aVCoTD4gv8/gGe7CsQ/QIWxwUGgcoy7tZM4YFmvDwmXyAT+8jEypd5LCnR34rNeCkdlF9kjkQFcGjfHK
        mVHYbDMCEOcD0ZKtGpu4wzdGShXRC0VTRnX63zmNjSEmF4g3Vi+QK9LyVvUphs8ZVprG+gngWkaU3FHU
        5ZxxhC0JIJcPPM/JB9rirIXJoaUZVppDqK6fAFi5fGdxL+eMD1oYcsU2FPPJA6y4fD4exFvftwLDVbdF
        f0Qg23ibRW8Nr+6aYlsC4JUH6kskgCPcTaRuZnRbXCCjQEQgs6lTAqf1ihXJ6iR5QOYRwF8ipjuDl04U
        6k/6fxgg2YFhZZEo2XzgdYlXHMNdJGoIY8aXIQWdGU3dd2mOs3OCFMBjH6iIjRKv1o1zFYPwtdcZz6GT
        HAKox7A3n+LODrjWskKRMvWCAAyTmOm8j1aFVzzfLFk/K9LcsZUhBvLam0IsKxUrTy8IwBNSOx4mcpeK
        vYUhAm6VVSq2RKG5gQV9ToHcJsxLjiEBDx/ofVVkTSyd/jK3/yKe5t6XngxD9CyBnoRFYDjj9jdwBx7V
        tjg/gHdcwAq8hDuJqdYnyf8N/CKZgPdzewH88T5jTonl4lk+p2O4lXNGe0QG8Y1spNG5mirV9pc3pnDX
        W2AF60ltGFEThxhSQBz3nA9bWC7SfnLGQ9zrx5IApDaOY8WeilBwJWxTW/9v8HZF7j3pzegcuAxh8gjA
        j5Ej7EloqMw95yi19f8M/rZxQZjKmHOc3LZxjzJ6fImcOLfYLjTEmpGCRgI+2mSG0PowpKIWM6lzArfd
        2YrWsXYcXwgU3HqIIUEdkN00riSjEIHnHOPPRDe/ebT9RhpaG+CgmyunOtiVeI1xyb/RXoCsvvV5Apgl
        sFXXYCdjVgPax9/JfFs/EnA+tmNUunT7OM0dTuPBYwyJLA0t5BNANCNN1KMJVBPgATN9mgCmC7z/bCPa
        RiMaxvnhPcZlM9FTYN5WOO6z238MLQVWrC5TIB9tTOdwdp3v2QL0HMQUaNw7Phaq5DuIkalxRkCs1Oh/
        /oVJ0U0E5m3A0GndOvagntAurGPMu15GKGjhh8A7zIeKF6okPsBRzmFZDuABgo65c4yZR8EwtGJqAjuF
        ItGjsdTnCGCJkKDGLrZ9ivQ1wxCBZYzLX0I/QdI66lPbn8rdGyQXzRg+QA9hhcNAvMDwQXmCQ0QKkwVi
        JHNm94wsDOeOocpdpY+YM8fBUNRkhnNmcpeMyDsGFvkMASwWbOhYnxlHlSwzCqAwFMMk5uOtEKxM1cTi
        IpJmjX2CKZv+zGbRnlSQQBiMtkxrQAZ366M89MLfrt/+v+kpIfj+s16Q07Q7hiNMQ6G31YIsLgQJDCOH
        80//sYJlmwI05FMtlBkF5M0VkcGUA54R9jh872oC+E7YSt+IaQDOwKMwBeWxnvmgG7lDxPJQ2+KmLUaO
        9dydQfMN5p8yZ/9Zb11g7ejPVNmyMFTYIdEUf7hy+/8QMpTn+WFOMle8H0xDdUZ9ylxZt4Hw/O0ZYehO
        HAcFAmbyEM6Mx8rBdgFnvA68qkFYm8Sd7ZaP7i4LGD3KXf3jSjzFzKbO4q7XqBPVNET1p+lIT/YjUfOY
        a7Y/lZ5GvN3u9RrWeitn4w4JGKDBdLtGIOEh3+zxqEu4wFFd21+cmQPo8cC8BNNRRUO9v2yM0FGkxI8O
        gkMuOPt76Gq23Y4p/nnqC1aGBYjTUPX3L7TSdY32DtcIdtEG6kFlRtu+XKtLb1iCcliuYQlW6uxb1dTB
        doH1dPd6UJxZqtszlhsRAqoNnTQUfs7GOzpLltfG9w40EGdhDm7Qub4PMGqB50YAdoJlKIFvNCzFSd0V
        a8tjrMPcROcwTtAfko9amqoqfyWvDogI/qOp3fo23eWKgtHLQc7ifXS3Ojt1IJyZ/+sZh3AbLEUAhmuK
        5Jmlv489mmCxA6KGsugub5ewroM0lKLPwjBdGoYUxGK1phjYkUIx8FcfBW/YPHYwlRTfaAmr2kFTCdpV
        eltDy0F7DZqqJ1ihpxSO0wpLbdR0pqA5ZgnulhKRczN+0yRb3QdboDizfkjuOCApYLkcXrZhKkkyXpHy
        7nt0/yWarjhOAk+V5h38VdMtb5RVuxL1MdFGvoIT+Fgoy6dw4e8LjWtZHTZCR03HQA5+RFVpfKclZtgg
        ufw0ptOxFCTpqULwrqYD7gStuK1QDG9plNCnScxcK0mn4GwLq4ycwky6A3m1OAIxgFGRMU/6f9P46F9+
        CX2xRjXpY6m5KyXRGpMtaEGRgi/pyjILsfijlwbLX27wZzRsCK1x/RdJaCwl9cpBJDePRJJJRegz6Eqj
        cKs0tp/n+9QaAfGnBDuDQdAa138B70gvYuSHWDyIKaRrXDJQ0dtPV3gEFQ0owKA1BuqscF6BCQjGGI2S
        QAbeJuZtxB3UxjNIJKVMLjdIpxmn0cy1JL/3ecTbXWMj2iy8pyPQzgREY67GJb1AxBJmGCFWRzeafyWd
        1Ok6Nz4FqxBPs11r2ML7E/PXGvs0xzrXr1bUY7SXuDKQYQLKGHgnfiRs1qGtG0GK2ibayNMaLYgXcYY+
        vZm+NYIOlTqIMKbizr+Sfy/NFo0kaXYUQ3GfJg9h7pn6lY6oQR7tOoqOhtZ4EkMwHlOxAGtoMXdiLw7S
        2Ec/JWEt/XUakeQQ+lRr+nSUbn+etjt7WaPkn0Orei8cAT/05NDNfxDOlhG9u2DSQSKJlZZHDJFfRfq3
        PP0WSX8NNtm3Fk7C8HmN65SGJwzlRJLNQoM5zt61MjrcOhCV8IVmt1Y6BumMqzIZoaTra/fd7yEpONDH
        tv8mRt/fgrL/ePm1f41GWXzNEcl3AgMlG4fsjAB01OTwzYuq/Eqw5IbFiOFqFJ+BL1HDJ7a/NAZwdRye
        KVR1yRaozJntvwFtrA9xMhi1MIVR6rngmIsqTn7capyln1JI2Cnj2s0vjk6aIn2vLCdVzekPfZ2GkjIF
        zTDfczehcwo/HKNZ588di4yu+WUWF5jDaYDdizgJUcT2evfbkbrLtwpznP/252u8iZy5PRcwHy10JJba
        jQuO1xgxlT9mWJPwaRQqkCqTxR1y8ab5We8GWPue0uwdydf7v7ZHwLdcu0ACt2cuG1vwtIMPgyDcjXnc
        T51OK1UWLkQoBgvE72WQKNTekNgBo409jfCJQIfxNNKDQuFSFMN/hUo+nMEs3GOKd04O/FGPJH6RJz2M
        ns6y+fPjXiQJRuBOQVsHmIsDUR+jBRNZt9Hq+MH1uJE0fbEkz9N0onazsaEoBI3xAbOid1GC31wiHR9B
        OcTjrHDm/XLEoYbtVMQodMI0Lht/wRLSY+wZ6m0Ugkk5Es/3z8JukpRbIMImz1IPr2Ads5ePt0DvXvYO
        9TQG/8ECXfn+p4gXDEADCzWEQFTBI5hK4l62DmJerKOErMMRjRECilJBS0EK5qM/GposHnrijntgEnZy
        efYKS/EeZV6JZ3vKzB2xUXfUfjb+wkIMRWvEGpwy7U8i6G3oS6d9MrNovpYM3/vdrvRpQXWM1ckH8u0F
        v2EyXkYbVJZsTAkmIe8mPIEJdNYfl1Kz7CTG2yvB21oDUTusklj/5wwJiXPwLgmad6AqIgVNSMUQhhja
        9u4YhinYTBJ+pqT7y6Knvc8+5R3sgVi8Ib0w7EUSFP/EGiTiPfTDQ3RE3IRr6MyNIv2hNAmPoShBxFGC
        fiqNcGLu5Ylz3IDm6ILnMRyfYyl24Zj0lNNDRFAxasMLO19vIwZuXMmHDJr7GC3/LmzCapIZ5uFbzMJ0
        zMZc+m0ZNuB3HCBp4hTOG1aN7Ay+oaf0V5tdtC3tftsWgdI7MrESna0t6+gUO2Fvko/d1U46C1sQZ//E
        TvugEun2SS5pJpuNbRjg7Nhea1AVg0itu+TwN/83DHZPbJ/5qIa+WCvB5GLFuEBi5UtK15dhMH4E821Q
        EI5P2l+Ens7N6LEfSqMtPsJuBxwIWdiLT+huw9SmyUYAapB+8CNncoWZIw3L0Q+1fC7T2VSE406Mws82
        OxLO4leMpjuLUBtkDqJwF97FRhtwg9N0F6OJ5Uf7QjSfveCHcmiGgfgeB3R65cVk/AMkmr5GhKi23mKE
        oibpCWOxhLbE+M5C6TiMFUjAw3TVkmrx7cQPwkhI7IBhmIWt+EsyKZxHKs06C8PRlYS8cOXOsTNK0NFQ
        h0jhRUzEAiThEE7SBmZzmm/P07cOYQvNMJGOma5oSKxeOXIcpziWImKojsbogj4Yinh8ipmkSK4jwS0J
        O7AH+2nsoZ+S6C/r6H9m0Cfi6ZN96BuN6ZtRNEOAWkj3IJDe4jBEouzlOoEVEEujwuU6gWXpr6URonR4
        BQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUX4H9JMbUS7kRsyAAAAABJRU5ErkJggg==
</value>
  </data>
</root>